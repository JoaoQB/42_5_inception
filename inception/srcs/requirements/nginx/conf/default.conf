events {
  worker_connections 1024;  # max simultaneous connections per worker
}

http {
  # Redirect all HTTP traffic to HTTPS
  # Ensures all traffic is securely encrypted as required
  server {
    # Listen on port 80 for both IPv4 and IPv6
    listen 80;
    listen [::]:80;
    # Domain name
    server_name jqueijo-.42.fr;

    # Redirect all requests to the same URL but with HTTPS scheme
    return 301 https://$host$request_uri;
  }

  # HTTPS server block with TLS and HTTP/2
  server {
  # Fundamental
    # Listen on port 443 (HTTPS) with SSL and HTTP/2 enabled for better performance
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Domain name
    server_name jqueijo-.42.fr;

    # TLS 1.2 or 1.3 only
    ssl_protocols TLSv1.2 TLSv1.3;

    # SSL certificate and private key used for HTTPS encryption
    # These are self-signed "snake-oil" certificates generated automatically by the OS (via the ssl-cert package).
    # They are useful for local development or internal testing but are **not trusted** by browsers or clients in production.
    # For real-world deployments, always replace these with valid certificates from a trusted Certificate Authority (CA),
    # such as those issued by Let's Encrypt or a commercial provider.
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

  # Optional but recommended
    # Cache SSL sessions to speed up repeated connections
    ssl_session_cache shared:SSL:10m;
    # Session cache lifetime
    ssl_session_timeout 10m;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    # Enable HTTP Strict Transport Security (HSTS) to force HTTPS for 2 years
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Disable session tickets for better security (prevents replay attacks)
    ssl_session_tickets off;

    # DNS resolver for OCSP stapling and other name resolutions
    resolver 8.8.8.8;
  # Optimization
    # Timeout for keep-alive connections (clients can reuse connection)
    keepalive_timeout   70;
  }
}
